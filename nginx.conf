events {
}
http {
  server {
    listen 80;  
    

    proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address 
    proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
    proxy_set_header Host $host; # to forward the original host requested by the client

 
    
    location /workshop-issuer {
      #proxy_pass http://erua-issuer:5030;
      proxy_pass http://workshop-issuer:5030;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header X-Forwarded-Proto $scheme;

      # Next.js-specific configuration
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_cache_bypass $http_upgrade;
    }

    # location /issuer-events {
    #   # Set headers for SSE
    #   # Proxy the request to the backend server
    #   proxy_pass http://erua-issuer:5030/issuer-events/;
    #   proxy_buffering off;
    #   proxy_cache off;
    #   proxy_set_header Host $host;
    #   proxy_set_header Connection '';
    #   proxy_http_version 1.1;
    #   chunked_transfer_encoding off;
    # }

    
    # location /_next {
      
    #   proxy_pass http://workshop-issuer:5030;
    #   proxy_set_header Host $host;
    #   proxy_set_header X-Real-IP $remote_addr;
    #   proxy_set_header X-Forwarded-For $remote_addr;
    #   proxy_set_header X-Forwarded-Proto $scheme;

    #   # Next.js-specific configuration
    #   proxy_http_version 1.1;
    #   proxy_set_header Upgrade $http_upgrade;
    #   proxy_set_header Connection 'upgrade';
    #   proxy_cache_bypass $http_upgrade;
    # }

  }


}
